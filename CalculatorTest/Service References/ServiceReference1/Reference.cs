//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sum", ReplyAction="http://tempuri.org/ICalculator/SumResponse")]
        int Sum(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sum", ReplyAction="http://tempuri.org/ICalculator/SumResponse")]
        System.Threading.Tasks.Task<int> SumAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Difference", ReplyAction="http://tempuri.org/ICalculator/DifferenceResponse")]
        int Difference(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Difference", ReplyAction="http://tempuri.org/ICalculator/DifferenceResponse")]
        System.Threading.Tasks.Task<int> DifferenceAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Product", ReplyAction="http://tempuri.org/ICalculator/ProductResponse")]
        int Product(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Product", ReplyAction="http://tempuri.org/ICalculator/ProductResponse")]
        System.Threading.Tasks.Task<int> ProductAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        float Divide(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        System.Threading.Tasks.Task<float> DivideAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : CalculatorTest.ServiceReference1.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<CalculatorTest.ServiceReference1.ICalculator>, CalculatorTest.ServiceReference1.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Sum(int num1, int num2) {
            return base.Channel.Sum(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> SumAsync(int num1, int num2) {
            return base.Channel.SumAsync(num1, num2);
        }
        
        public int Difference(int num1, int num2) {
            return base.Channel.Difference(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> DifferenceAsync(int num1, int num2) {
            return base.Channel.DifferenceAsync(num1, num2);
        }
        
        public int Product(int num1, int num2) {
            return base.Channel.Product(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> ProductAsync(int num1, int num2) {
            return base.Channel.ProductAsync(num1, num2);
        }
        
        public float Divide(int num1, int num2) {
            return base.Channel.Divide(num1, num2);
        }
        
        public System.Threading.Tasks.Task<float> DivideAsync(int num1, int num2) {
            return base.Channel.DivideAsync(num1, num2);
        }
    }
}
